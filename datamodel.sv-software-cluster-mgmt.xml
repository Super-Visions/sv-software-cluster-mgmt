<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0">
	<classes>
		<class id="SoftwareCluster" _delta="define">
			<parent>FunctionalCI</parent>
			<properties>
				<category>bizmodel</category>
				<abstract>true</abstract>
				<key_type>autoincrement</key_type>
				<db_table>softwarecluster</db_table>
				<db_key_field>id</db_key_field>
				<naming>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</naming>
				<icon>images/cluster.png</icon>
				<reconsiliation>
					<attributes>
						<attribute id="org_id"/>
						<attribute id="name"/>
					</attributes>
				</reconsiliation>
			</properties>
			<fields>
				<field id="softwareinstance_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkSoftwareInstanceToSoftwareCluster</linked_class>
					<ext_key_to_me>cluster_id</ext_key_to_me>
					<ext_key_to_remote>instance_id</ext_key_to_remote>
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[	public function DoCheckToWrite()
	{
		parent::DoCheckToWrite();
		
		$aChanges = $this->ListChanges();
		if (isset($aChanges['softwareinstance_list']))
		{
			$sAllowedSoftwareInstanceClass = static::GetSoftwareInstanceClass();
			while ($oLink = $aChanges['softwareinstance_list']->Fetch())
			{
				// Compare SoftwareInstance types
				if ($oLink->IsModified() && !is_a($oLink->Get('instance_id_finalclass_recall'), $sAllowedSoftwareInstanceClass, true))
				{
					$this->m_aCheckIssues[] = Dict::Format('UI:SoftwareCluster:Validate:LinkSoftwareInstance', MetaModel::GetName(get_class($this)), MetaModel::GetName($sAllowedSoftwareInstanceClass));
				}
			}
		}
	}]]></code>
				</method>
				<method id="GetSoftwareInstanceClass" _delta="define">
					<comment><![CDATA[/**
	 * Get the type of linked software instances
	 * 
	 * @return string
	 */]]></comment>
					<static>true</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[	public static function GetSoftwareInstanceClass(){ return 'SoftwareInstance'; }]]></code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="org_id">
							<rank>20</rank>
						</item>
						<item id="business_criticity">
							<rank>30</rank>
						</item>
						<item id="move2production">
							<rank>40</rank>
						</item>
						<item id="description">
							<rank>50</rank>
						</item>
						<item id="contacts_list">
							<rank>60</rank>
						</item>
						<item id="documents_list">
							<rank>70</rank>
						</item>
						<item id="applicationsolution_list">
							<rank>90</rank>
						</item>
						<item id="softwareinstance_list">
							<rank>100</rank>
						</item>
						<item id="providercontracts_list">
							<rank>110</rank>
						</item>
						<item id="services_list">
							<rank>120</rank>
						</item>
					</items>
				</details>
			</presentation>
		</class>
		<class id="DBCluster" _delta="define">
			<parent>SoftwareCluster</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>dbcluster</db_table>
				<db_key_field>id</db_key_field>
				<naming>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</naming>
				<icon>images/cluster-db.png</icon>
				<reconsiliation>
					<attributes>
						<attribute id="org_id"/>
						<attribute id="name"/>
					</attributes>
				</reconsiliation>
			</properties>
			<fields>
				<field id="dbschema_list" xsi:type="AttributeLinkedSet">
					<linked_class>DatabaseSchema</linked_class>
					<ext_key_to_me>dbserver_id</ext_key_to_me>
					<edit_mode>in_place</edit_mode>
					<tracking_level>all</tracking_level>
				</field>
				<field id="redundancy" xsi:type="AttributeRedundancySettings">
					<sql>redundancy</sql>
					<relation_code>impacts</relation_code>
					<from_class>SoftwareInstance</from_class>
					<neighbour_id>softwarecluster</neighbour_id>
					<enabled>true</enabled>
					<enabled_mode>user</enabled_mode>
					<min_up>1</min_up>
					<min_up_type>count</min_up_type>
					<min_up_mode>user</min_up_mode>
				</field>
			</fields>
			<methods>
				<method id="GetSoftwareInstanceClass" _delta="define">
					<comment><![CDATA[/**
	 * Get the type of linked software instances
	 * 
	 * @return string
	 */]]></comment>
					<static>true</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[	public static function GetSoftwareInstanceClass(){ return 'DBServer'; }]]></code>
				</method>
			</methods>
			<relations>
				<relation id="impacts">
					<neighbours>
						<neighbour id="dbschema">
							<attribute>dbschema_list</attribute>
						</neighbour>
					</neighbours>
				</relation>
			</relations>
			<presentation>
				<details>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="org_id">
							<rank>20</rank>
						</item>
						<item id="business_criticity">
							<rank>30</rank>
						</item>
						<item id="move2production">
							<rank>40</rank>
						</item>
						<item id="description">
							<rank>50</rank>
						</item>
						<item id="contacts_list">
							<rank>60</rank>
						</item>
						<item id="documents_list">
							<rank>70</rank>
						</item>
						<item id="applicationsolution_list">
							<rank>90</rank>
						</item>
						<item id="softwareinstance_list">
							<rank>100</rank>
						</item>
						<item id="dbschema_list">
							<rank>110</rank>
						</item>
						<item id="providercontracts_list">
							<rank>120</rank>
						</item>
						<item id="services_list">
							<rank>130</rank>
						</item>
					</items>
				</details>
			</presentation>
		</class>
		<class id="lnkSoftwareInstanceToSoftwareCluster" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<is_link>1</is_link>
				<category>bizmodel</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>lnksoftwareinstancetosoftwarecluster</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="instance_id"/>
						<attribute id="cluster_id"/>
					</attributes>
				</naming>
				<display_template/>
				<icon/>
				<reconciliation>
					<attributes>
						<attribute id="instance_id"/>
						<attribute id="cluster_id"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="cluster_id" xsi:type="AttributeExternalKey">
					<sql>cluster_id</sql>
					<target_class>SoftwareCluster</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="cluster_name" xsi:type="AttributeExternalField">
					<extkey_attcode>cluster_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="instance_id" xsi:type="AttributeExternalKey">
					<sql>instance_id</sql>
					<target_class>SoftwareInstance</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="instance_name" xsi:type="AttributeExternalField">
					<extkey_attcode>instance_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="instance_status" xsi:type="AttributeExternalField">
					<extkey_attcode>instance_id</extkey_attcode>
					<target_attcode>status</target_attcode>
				</field>
				<field id="role" xsi:type="AttributeString">
					<sql>role</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[	public function DoCheckToWrite()
	{
		parent::DoCheckToWrite();
		
		// Get allowed SoftwareInstance types
		$sSoftwareClusterClass = $this->Get('cluster_id_finalclass_recall');
		$sAllowedSoftwareInstanceClass = forward_static_call(array($sSoftwareClusterClass, 'GetSoftwareInstanceClass'));
		
		// Compare SoftwareInstance types
		if (!is_a($this->Get('instance_id_finalclass_recall'), $sAllowedSoftwareInstanceClass, true))
		{
			$this->m_aCheckIssues[] = Dict::Format('UI:SoftwareCluster:Validate:LinkSoftwareInstance', MetaModel::GetName($sSoftwareClusterClass), MetaModel::GetName($sAllowedSoftwareInstanceClass));
		}
	}]]></code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="role">
							<rank>10</rank>
						</item>
						<item id="instance_id">
							<rank>20</rank>
						</item>
						<item id="cluster_id">
							<rank>30</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="role">
							<rank>10</rank>
						</item>
						<item id="instance_id">
							<rank>20</rank>
						</item>
						<item id="cluster_id">
							<rank>30</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="role">
							<rank>10</rank>
						</item>
						<item id="instance_id">
							<rank>20</rank>
						</item>
						<item id="instance_status">
							<rank>30</rank>
						</item>
						<item id="cluster_id">
							<rank>40</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>
		<class id="SoftwareInstance" _delta="must_exist">
			<fields>
				<field id="softwarecluster_list" xsi:type="AttributeLinkedSetIndirect" _delta="define">
					<linked_class>lnkSoftwareInstanceToSoftwareCluster</linked_class>
					<ext_key_to_me>instance_id</ext_key_to_me>
					<ext_key_to_remote>cluster_id</ext_key_to_remote>
				</field>
			</fields>
			<presentation>
				<details>
					<items>
						<item id="softwarecluster_list" _delta="define">
							<rank>140</rank>
						</item>
					</items>
				</details>
			</presentation>
		</class>
		<class id="DBServer" _delta="must_exist">
			<relations>
				<relation id="impacts">
					<neighbours>
						<neighbour id="dbcluster" _delta="define">
							<attribute>softwarecluster_list</attribute>
						</neighbour>
					</neighbours>
				</relation>
			</relations>
			<presentation>
				<details>
					<items>
						<item id="softwarecluster_list" _delta="define">
							<rank>140</rank>
						</item>
					</items>
				</details>
			</presentation>
		</class>
		<class id="DatabaseSchema" _delta="must_exist">
			<properties>
				<obsolescence _delta="delete"/>
			</properties>
			<fields>
				<field id="dbserver_id" xsi:type="AttributeExternalKey" _delta="redefine">
					<filter><![CDATA[SELECT DBServer UNION SELECT DBCluster]]></filter>
					<sql>dbserver_id</sql>
					<target_class>FunctionalCI</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
				</field>
			</fields>
		</class>
	</classes>
	<menus>
		<menu id="ConfigManagementOverview" xsi:type="DashboardMenuNode" _delta="must_exist">
			<definition>
				<cells>
					<cell id="3">
						<dashlets>
							<dashlet id="SoftwareCluster" xsi:type="DashletBadge" _delta="define">
								<rank>11</rank>
								<class>SoftwareCluster</class>
							</dashlet>
						</dashlets>
					</cell>
				</cells>
			</definition>
		</menu>
	</menus>
	<dictionaries>
		<dictionary id="EN US">
			<entries>
				<entry id="Class:DBCluster" _delta="define">Database Cluster</entry>
				<entry id="Class:DBCluster/Attribute:dbschema_list" _delta="define">DB Schemas</entry>
				<entry id="Class:DBCluster/Attribute:dbschema_list+" _delta="define">All the database schemas for this cluster.</entry>
				<entry id="Class:DBCluster/Attribute:redundancy" _delta="define">Redundancy</entry>
				<entry id="Class:DBCluster/Attribute:redundancy/disabled" _delta="define">The cluster is up if all DB servers are up.</entry>
				<entry id="Class:DBCluster/Attribute:redundancy/count" _delta="define">The cluster is up if at least %1$s DB servers are up.</entry>
				<entry id="Class:DBCluster/Attribute:redundancy/percent" _delta="define">The cluster is up if at least %1$s %% of the DB servers are up.</entry>
				<entry id="Class:DBCluster/Attribute:softwareinstance_list" _delta="define">DB Servers</entry>
				<entry id="Class:DBCluster/Attribute:softwareinstance_list+" _delta="define">List of database servers included in this cluster.</entry>
				<entry id="Class:SoftwareCluster" _delta="define">Software Cluster</entry>
				<entry id="Class:SoftwareCluster/Attribute:softwareinstance_list" _delta="define">Software Instances</entry>
				<entry id="Class:SoftwareCluster/Attribute:softwareinstance_list+" _delta="define">List of software instances included in this cluster.</entry>
				<entry id="Class:SoftwareInstance/Attribute:softwarecluster_list" _delta="define">Software Clusters</entry>
				<entry id="Class:SoftwareInstance/Attribute:softwarecluster_list+" _delta="define">List of software clusters this software instance is part of.</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster" _delta="define">Link Software Instance / Software Cluster</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:cluster_id" _delta="define">Cluster</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:cluster_id+" _delta="define"/>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:instance_id" _delta="define">Software Instance</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:instance_id+" _delta="define"/>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:role" _delta="define">Role</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:role+" _delta="define"/>
				<entry id="UI:SoftwareCluster:Validate:LinkSoftwareInstance" _delta="define">%1$s objects only allow objects of type %2$s to be linked as instance.</entry>
			</entries>
		</dictionary>
		<dictionary id="PT BR">
			<entries>
				<entry id="Class:DBCluster" _delta="define">Cluster de banco de dados</entry>
				<entry id="Class:DBCluster/Attribute:dbschema_list" _delta="define">Esquemas da base de dados</entry>
				<entry id="Class:DBCluster/Attribute:dbschema_list+" _delta="define">Todos os esquemas de base de dados para este clueste.</entry>
				<entry id="Class:DBCluster/Attribute:redundancy" _delta="define">Redundância</entry>
				<entry id="Class:DBCluster/Attribute:redundancy/disabled" _delta="define">O cluster está ativo se todos os servidores de BD estiverem ativos.</entry>
				<entry id="Class:DBCluster/Attribute:redundancy/count" _delta="define">O cluster está ativo se pelo menos %1$s servidor de BD estiver ativo.</entry>
				<entry id="Class:DBCluster/Attribute:redundancy/percent" _delta="define">O cluster está ativo se pelo menos %1$s %% dos servidores de BD estiverem ativos.</entry>
				<entry id="Class:DBCluster/Attribute:softwareinstance_list" _delta="define">Servidores de BD</entry>
				<entry id="Class:DBCluster/Attribute:softwareinstance_list+" _delta="define">Lista dos servidores de base de dados inclusos neste cluster.</entry>
				<entry id="Class:SoftwareCluster" _delta="define">Cluster de software</entry>
				<entry id="Class:SoftwareCluster/Attribute:softwareinstance_list" _delta="define">Instâncias de software</entry>
				<entry id="Class:SoftwareCluster/Attribute:softwareinstance_list+" _delta="define">Lista de instância de software inclusas neste cluster.</entry>
				<entry id="Class:SoftwareInstance/Attribute:softwarecluster_list" _delta="define">Clusters de software</entry>
				<entry id="Class:SoftwareInstance/Attribute:softwarecluster_list+" _delta="define">Lista dos clusters de software que esta instância faz parte.</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster" _delta="define">Vincular instância / cluster de software</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:cluster_id" _delta="define">Cluster</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:cluster_id+" _delta="define"/>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:instance_id" _delta="define">Instância de software</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:instance_id+" _delta="define"/>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:role" _delta="define">Papel</entry>
				<entry id="Class:lnkSoftwareInstanceToSoftwareCluster/Attribute:role+" _delta="define"/>
				<entry id="UI:SoftwareCluster:Validate:LinkSoftwareInstance" _delta="define">Objetos %1$s apenas permitem vínculo com com objetos do tipo %2$s como instância.</entry>
			</entries>
		</dictionary>
	</dictionaries>
</itop_design>
